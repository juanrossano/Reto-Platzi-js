// console.log();
console.log("Encuentra la ubicaci칩n del valor buscado");

const array1 = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
]

const value1 = 5

console.log(searchValue(array1, value1));

const array2 = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
];

const value2 = 45;

console.log(searchValue(array2, value2));

function searchValue(array, value) {
    // Tu c칩digo aqu칤 游녣
    let row = -1;
    let column = -1;
  
    console.log(value);
  
    for (var x = 0; x < array.length; x++) {
      for (var y = 0; y < array[x].length; y++) {
        if (array[x][y] == value) {
          row = x;
          column = y;
          return { row: x, column: y };
        }
      }
    }
    throw new Error("Valor no encontrado");
}

/**
En este desaf칤o, tu objetivo es encontrar un valor espec칤fico en un array de dos dimensiones.

La funci칩n searchValue recibir치 dos par치metros: un array bidimensional y un valor a buscar. Tu tarea ser치 implementar la l칩gica necesaria para encontrar el valor y retornar un objeto con las propiedades row y column que indicar치n la posici칩n del valor dentro del array bidimensional.

Si el valor no se encuentra en la matriz, la funci칩n deber치 lanzar un error con el mensaje "Valor no encontrado". Recuerda que la sintaxis para lanzar errores es la siguiente

throw new Error("Valor no encontrado");

Ejemplo 1:


Input:

const array = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
]

const value = 5

searchValue(array, value)

Output:

{
  row: 1,
  column: 1,
}

Ejemplo 2:


Input:

const array = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
];

const value = 45;

Output: "Valor no encontrado"
 */