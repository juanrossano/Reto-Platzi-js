// console.log();
console.log("Ordena los productos por precio y disponibilidad");

const products = [
  { name: "product1", price: 10, inStock: true },
  { name: "product2", price: 20, inStock: false },
  { name: "product3", price: 15, inStock: true },
  { name: "product4", price: 5, inStock: false },
]

console.log(sortByAvailabilityAndPrice(products));


function sortByAvailabilityAndPrice(products) {
    // Tu c칩digo aqu칤 游녣
    let ordenado = [...products]

    ordenado.sort(function(a,b){
        if(b.inStock > a.inStock) return 1;
        if(b.inStock < a.inStock) return -1;
        if(a.price > b.price) return 1; 
        if(a.price < b.price) return -1;
    })
    return ordenado
}
  

/**
En este desaf칤o, tendr치s que ordenar una lista de productos.

Tu tarea es implementar la l칩gica de la funci칩n sortByAvailabilityAndPrice. Esta funci칩n recibir치 un array de objetos que representan productos, y devolver치 una copia ordenada de dicho array.

El ordenamiento se realizar치 siguiendo dos criterios:

Primero, los productos disponibles en inventario ser치n colocados al principio de la lista.
Luego, los productos ser치n ordenados por su precio, de manera ascendente.
Es importante destacar que la lista original no sufrir치 ninguna modificaci칩n, y que la funci칩n devolver치 una nueva lista con los cambios mencionados.

Ejemplo

Input:

const products = [
  { name: "product1", price: 10, inStock: true },
  { name: "product2", price: 20, inStock: false },
  { name: "product3", price: 15, inStock: true },
  { name: "product4", price: 5, inStock: false },
]

sortByAvailabilityAndPrice(products)

Output:
[
  { name: "product1", price: 10, inStock: true },
  { name: "product3", price: 15, inStock: true },
  { name: "product4", price: 5, inStock: false },
  { name: "product2", price: 20, inStock: false },
]
 */