// console.log();
console.log("Modifica el prototype de los arrays");


function arrayModified() {
  // Tu cÃ³digo aquÃ­ ðŸ‘ˆ
  Array.prototype.myFilter = function (funcion) {
    const lista = [];

    for (let indice = 0; indice < this.length; indice++) {
      const elemento = this[indice];
      if (funcion(elemento)) {
        lista.push(elemento);
      }
    }

    return lista;
  };
}



  
/**
 * En este desafÃ­o, deberÃ¡s crear tu propia implementaciÃ³n de filter para el prototype de los arrays.

Esto implica agregar un nuevo mÃ©todo llamado myFilter al prototype de los arrays, el cual permitirÃ¡ filtrar elementos de manera similar al mÃ©todo filter nativo del lenguaje. El objetivo es poder usar el mÃ©todo myFilter de la siguiente manera:

Ejemplo 1:


Input:

const array = [1,2,3,4,5,6]

array.myFilter(num => num % 2 === 0)

Output: [2,4,6]

Ejemplo 2:


Input:

const arr = [
  {
    name: "Juan",
    age: 10,
  },
  {
    name: "Pedro",
    age: 20,
  },
  {
    name: "Maria",
    age: 30,
  },
];

array.myFilter((person) => person.age > 18)

Output: [
  {
    name: "Pedro",
    age: 20,
  },
  {
    name: "Maria",
    age: 30,
  },

*/